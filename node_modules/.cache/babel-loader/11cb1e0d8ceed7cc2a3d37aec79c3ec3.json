{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Development\\\\REACT\\\\portfolio-site\\\\src\\\\Pages\\\\ContactPage.js\";\nimport React from 'react';\nimport Hero from '../Components/Hero';\nimport Content from '../Components/Content';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport emailjs from \"emailjs-com\";\nimport Swal from 'sweetalert2';\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const templateId = 'portfolio-template';\n      this.sendFeedback(templateId, {\n        message: this.state.message,\n        name: this.state.name,\n        email: this.state.email\n      }); // this.setState({\n      //     disable: true,\n      //     // emailsent: false,\n      // });\n      // axios.post('http://localhost:3001/api/email', this.state)\n      //     .then( res => {\n      //         if(res.data.success) {\n      //             this.setState({\n      //                 disable: false,\n      //                 emailsent: true\n      //             });\n      //         } else {\n      //             this.setState({\n      //                 disable: false,\n      //                 emailsent: false\n      //             });\n      //         }\n      //     })\n      //     .catch(err => {\n      //         this.setState({\n      //             disable: false,\n      //             emailsent: false\n      //         });\n      //     })\n    };\n\n    this.sendFeedback = (templateId, variables) => {\n      emailjs.send('Portfolio ', templateId, variables, 'user_FjuKAQoOKppKL7KZYUDC9').then(res => {\n        Swal.fire({\n          title: 'Email Successfully Sent',\n          icon: 'success'\n        });\n      }).catch(err => {\n        Swal.fire({\n          title: 'Email Failed to Send',\n          icon: 'error'\n        });\n        console.error('Email Error:', err);\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disable: false,\n      emailsent: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Hero, {\n        title: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"full-name\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"full-name\",\n              name: \"name\",\n              type: \"text\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: this.state.email,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"message\",\n              name: \"message\",\n              as: \"textarea\",\n              rows: \"3\",\n              value: this.state.message,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"d-inline-block\",\n            variant: \"primary\",\n            type: \"submit\",\n            disable: this.state.disable,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), this.state.emailsent === true && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"d-line success-msg\",\n            children: \" Email Sent \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 59\n          }, this), this.state.emailsent === false && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"d-line err-msg\",\n            children: \" Email Not Sent \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactPage;","map":{"version":3,"sources":["D:/Development/REACT/portfolio-site/src/Pages/ContactPage.js"],"names":["React","Hero","Content","Form","Button","axios","emailjs","Swal","ContactPage","Component","constructor","props","handleChange","event","target","value","type","checked","name","setState","handleSubmit","preventDefault","templateId","sendFeedback","message","state","email","variables","send","then","res","fire","title","icon","catch","err","console","error","disable","emailsent","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Hero from '../Components/Hero'\r\nimport Content from '../Components/Content'\r\nimport { Form } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport emailjs from \"emailjs-com\";\r\nimport Swal from 'sweetalert2'\r\n\r\nclass ContactPage extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            message: '',\r\n            disable: false,\r\n            emailsent: null,\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const templateId = 'portfolio-template'\r\n\r\n        this.sendFeedback(templateId, {\r\n            message: this.state.message, \r\n            name: this.state.name, \r\n            email: this.state.email\r\n        })\r\n\r\n        // this.setState({\r\n        //     disable: true,\r\n        //     // emailsent: false,\r\n        // });\r\n\r\n        // axios.post('http://localhost:3001/api/email', this.state)\r\n        //     .then( res => {\r\n        //         if(res.data.success) {\r\n        //             this.setState({\r\n        //                 disable: false,\r\n        //                 emailsent: true\r\n        //             });\r\n        //         } else {\r\n        //             this.setState({\r\n        //                 disable: false,\r\n        //                 emailsent: false\r\n        //             });\r\n        //         }\r\n        //     })\r\n        //     .catch(err => {\r\n        //         this.setState({\r\n        //             disable: false,\r\n        //             emailsent: false\r\n        //         });\r\n        //     })\r\n    }\r\n\r\n    sendFeedback = (templateId, variables) => {\r\n        emailjs.send(\r\n          'Portfolio ', templateId,\r\n          variables, 'user_FjuKAQoOKppKL7KZYUDC9'\r\n          ).then(res => {\r\n            Swal.fire({\r\n              title: 'Email Successfully Sent',\r\n              icon: 'success'\r\n            })\r\n          })\r\n          .catch(err => {\r\n            Swal.fire({\r\n              title: 'Email Failed to Send',\r\n              icon: 'error'\r\n            })\r\n            console.error('Email Error:', err)\r\n          })\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Hero title={this.props.title} />\r\n\r\n                <Content>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\r\n                            <Form.Control id=\"full-name\" name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                            <Form.Control id=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"message\">Message</Form.Label>\r\n                            <Form.Control id=\"message\" name=\"message\" as=\"textarea\" rows=\"3\" value={this.state.message} onChange={this.handleChange}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button className=\"d-inline-block\" variant=\"primary\" type=\"submit\" disable={this.state.disable}>\r\n                            Send\r\n                        </Button>\r\n\r\n\r\n                        {this.state.emailsent === true && <p className=\"d-line success-msg\"> Email Sent </p>}\r\n                        {this.state.emailsent === false && <p className=\"d-line err-msg\"> Email Not Sent </p>}\r\n                    </Form>\r\n                </Content>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ContactPage;"]},"metadata":{},"sourceType":"module"}